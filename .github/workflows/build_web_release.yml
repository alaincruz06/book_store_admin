name: Build and Deploy Flutter Web to GitHub Pages

on:
  workflow_dispatch:  # Manual triggering only

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.1' 
        channel: 'stable'
        cache: true  # Enable Flutter SDK caching

    - name: Cache pub dependencies
      uses: actions/cache@v4
      with:
        path: ~/.pub-cache
        key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-pub-

    - name: Cache Flutter build
      uses: actions/cache@v4
      with:
        path: |
          build
          .dart_tool
        key: ${{ runner.os }}-flutter-build-${{ hashFiles('**/pubspec.lock') }}-${{ hashFiles('**/*.dart') }}
        restore-keys: |
          ${{ runner.os }}-flutter-build-${{ hashFiles('**/pubspec.lock') }}-
          ${{ runner.os }}-flutter-build-

    - name: Convert line endings (dos2unix equivalent)
      run: |
        # Install dos2unix if needed, or use sed as alternative
        sudo apt-get update
        sudo apt-get install -y dos2unix
        dos2unix pubspec.yaml

    - name: Increment build version
      run: |
        echo "Incrementing build version..."
        perl -i -pe 's/^(version:\s+\d+\.\d+\.)(\d+)\+(\d+)$/$1.($2+1)."+".($3+1)/e' pubspec.yaml
        
        # Display the new version
        echo "New version:"
        grep version: pubspec.yaml

    - name: Get Flutter dependencies
      run: |
        # Only clean if we have a cache miss or significant changes
        if [ ! -d ".dart_tool" ] || [ ! -d "build" ]; then
          echo "No build cache found, running flutter clean"
          flutter clean
        else
          echo "Build cache found, skipping flutter clean"
        fi
        flutter pub get

    - name: Build Flutter web
      run: |
        flutter build web --release --web-renderer=canvaskit --pwa-strategy=none

    - name: Update base href for GitHub Pages
      run: |
        echo "Updating base href for GitHub Pages"
        # For GitHub Pages, the base href should be the repository name
        baseHref="/${{ github.event.repository.name }}/"
        sed -i "s|<base href=\"/\">|<base href=\"$baseHref\">|g" build/web/index.html

    - name: Add version to assets for cache busting
      run: |
        echo "Reading version from pubspec.yaml without + sign"
        version=$(grep version: pubspec.yaml | sed 's/version: //g' | sed 's/+//g')
        echo "Version: $version"
        
        echo "Patching version in js partial urls in main.dart.js"
        sed -i "s/\"main.dart.js\"/\"main.dart.js?v=$version\"/g" build/web/flutter.js
        sed -i "s/\"main.dart.js\"/\"main.dart.js?v=$version\"/g" build/web/flutter_bootstrap.js
        sed -i "s/\"main.dart.js\"/\"main.dart.js?v=$version\"/g" build/web/index.html
        
        echo "Patching assets loader with v=$version in main.dart.js"
        sed -i "s/self\.window\.fetch(a),/self.window.fetch(a + '?v=$version'),/g" build/web/main.dart.js
        
        echo "Adding v= to manifest.json"
        sed -i 's/"manifest.json"/"manifest.json?v='"$version"'"/' build/web/index.html

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './build/web'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
